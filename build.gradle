buildscript {
	ext {
		springBootVersion = "3.3.5"
		springDependencyManagementVersion = "1.1.6"
		springdocVersion = "2.6.0"
		mapstructVersion = "1.6.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

group = 'com.kurylek'

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

compileJava {
	options.compilerArgs += [
			'-Amapstruct.verbose=false',
			'-Amapstruct.defaultComponentModel=spring',
			'-Amapstruct.defaultInjectionStrategy=constructor',
			'-Amapstruct.unmappedTargetPolicy=ERROR'
	]
}

repositories {
	mavenCentral()
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

	implementation "org.liquibase:liquibase-core"

	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	runtimeOnly "com.h2database:h2"

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

test {
	useJUnitPlatform()
}
